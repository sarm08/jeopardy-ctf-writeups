from pwn import *
from ctypes import *

cdll.LoadLibrary('/lib/x86_64-linux-gnu/libc.so.6')
libc = CDLL('/lib/x86_64-linux-gnu/libc.so.6')

local = False
if local:
    p = process('./schlage')
else:
    p = remote('chals.damctf.xyz', 31932)

def debug():
    gdbscript = 'b* do_pin4+279'
    gdb.attach(p, gdbscript=gdbscript)
#debug()

def pin_1():
    p.recvuntil('Which pin would you like to open?')
    p.sendline('1')
    p.recvuntil('> ')
    n = str(0x3e ^ 0x57 ^ 0x81 ^ 0xd3 ^ 0x25 ^ 0x93 ^ 0xee)
    p.sendline(n)
    
def pin_2():
    p.recvuntil('Which pin would you like to open?')
    p.sendline('2')
    p.recvuntil('I wonder what it means?\n')
    seed = int(p.recvline().strip())
    print(seed)
    libc.srand(seed)
    n = libc.rand()
    print(str(n))
    p.recvuntil('What\'s your favorite number?')
    p.sendline(str(n))  
    
def pin_3():
    p.recvuntil('Which pin would you like to open?')
    p.sendline('3')
    p.recvuntil('> ')
    n = str(0xdeadbeef ^ 0x13371337)
    p.sendline(n)

def pin_4():
    p.recvuntil('Which pin would you like to open?')
    p.sendline('4')
    p.recvuntil('What\'s your favorite sentence?')
    p.sendline('\x22\x22\x22')
    

def pin_5():
    p.recvuntil('Which pin would you like to open?')
    p.sendline('5')
    p.recvuntil('> ')
    libc.srand(0x42424242)
    n = str(libc.rand())
    p.sendline(n)

pin_3()
pin_1()
pin_5()
pin_2()

sentence = b''
while('cool' not in str(sentence)):
    pin_4()
    sentence = p.recvlines(2)
    print(sentence)

p.interactive()
